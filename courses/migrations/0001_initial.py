# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-27 18:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(auto_created='^gocourses\\d+r{5,8}$', max_length=80, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('about', models.CharField(default='No Information', max_length=400)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'courses_categories',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Course_dir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('no_hours', models.DurationField()),
                ('no_seats', models.IntegerField()),
                ('description', models.CharField(max_length=300)),
                ('price', models.IntegerField()),
                ('certification', models.BooleanField(default=False)),
                ('type_of_degree', models.TextField()),
                ('date', models.DateTimeField()),
                ('time', models.TimeField()),
                ('availability', models.BooleanField(default=False)),
                ('img', models.ImageField(default='static/img/profile/no_image.gif', upload_to='static/img/profile/')),
                ('published_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Category')),
            ],
            options={
                'db_table': 'courses_courses',
            },
        ),
        migrations.CreateModel(
            name='Go_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=None)),
                ('mobile', models.CharField(default=None, max_length=20)),
                ('img', models.ImageField(default='static/img/profile/no_image.gif', upload_to='static/img/profile/')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_go_users',
                'verbose_name_plural': 'Go_Users',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=None)),
                ('mobile', models.CharField(default=None, max_length=20)),
                ('img', models.ImageField(default='static/img/profile/no_image.gif', upload_to='static/img/profile/')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_instructors',
                'verbose_name_plural': 'Instructors',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Course_dir')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Go_User')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=300)),
                ('id_S', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Category')),
            ],
            options={
                'db_table': 'courses_specializations',
            },
        ),
        migrations.CreateModel(
            name='Training_Center',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_center_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=1000)),
                ('logo', models.ImageField(default='static/img/profile/no_image.gif', upload_to='static/img/profile/')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers_training_center',
            },
        ),
        migrations.CreateModel(
            name='Training_Center_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=254)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Training_Center')),
            ],
        ),
        migrations.CreateModel(
            name='Training_Center_Admin_Levone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_one', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='courses.Training_Center_Admin')),
            ],
            options={
                'db_table': 'training_center_admin_1',
                'permissions': [('reply_message', 'reply message'), ('edit_data_courses', 'edit some data of courses')],
            },
        ),
        migrations.CreateModel(
            name='Training_Center_Admin_Levtwo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_two', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='courses.Training_Center_Admin')),
            ],
            options={
                'db_table': 'training_center_admin_2',
                'permissions': [('reply_message', 'reply message'), ('edit_data_courses', 'edit some data of courses'), ('add_data_courses', 'add some data of courses'), ('delete_data_courses', 'delete some data of courses')],
            },
        ),
        migrations.AlterOrderWithRespectTo(
            name='training_center',
            order_with_respect_to='training_center_name',
        ),
        migrations.AlterOrderWithRespectTo(
            name='specialization',
            order_with_respect_to='name',
        ),
        migrations.AddField(
            model_name='course_dir',
            name='id_CO',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.Specialization'),
        ),
        migrations.AddField(
            model_name='course_dir',
            name='instructor',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.Instructor'),
        ),
        migrations.AddField(
            model_name='course_dir',
            name='training_center',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='courses.Training_Center'),
        ),
        migrations.AddField(
            model_name='course_dir',
            name='user',
            field=models.ManyToManyField(default=None, to='courses.Go_User'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='course_dir',
            order_with_respect_to='availability',
        ),
        migrations.AlterOrderWithRespectTo(
            name='category',
            order_with_respect_to='name',
        ),
    ]
